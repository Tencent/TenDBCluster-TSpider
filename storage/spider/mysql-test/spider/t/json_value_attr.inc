let $CHILD2_1_DROP_TABLES=
DROP TABLE IF EXISTS tbl;
let $CHILD2_1_CREATE_TABLES=
CREATE TABLE tbl (id INT PRIMARY KEY, j JSON)$CHILD2_1_ENGINE  $CHILD2_1_CHARSET;

let $CHILD2_2_DROP_TABLES=
DROP TABLE IF EXISTS tbl;
let $CHILD2_2_CREATE_TABLES=
CREATE TABLE tbl (id INT PRIMARY KEY, j JSON)$CHILD2_2_ENGINE  $CHILD2_2_CHARSET;

let $MASTER_DROP_TABLES1=
DROP TABLE IF EXISTS tbl;

let $MASTER_CREATE_TABLES1 = 
CREATE TABLE tbl (id INT PRIMARY KEY, j JSON)$MASTER_1_ENGINE $MASTER_1_CHARSET
PARTITION BY LIST (id % 2)
(
  PARTITION `pt0` VALUES IN (0) COMMENT = 'database "auto_test_remote", table "tbl", srv "s_2_1",aim "0"',
  PARTITION `ptbl` VALUES IN (1) COMMENT = 'database "auto_test_remote_2", table "tbl", srv "s_2_2",aim "1"'
);

--source spider_json_functions.inc

--echo
--echo insert data and test
SET GLOBAL print_bool_as_literal = ON;
INSERT INTO tbl VALUES (1, '{"a": 1, "b": 2, "c": {"d": 4}}');
SELECT JSON_DEPTH(j) FROM tbl;
SELECT * FROM tbl WHERE JSON_DEPTH(j) = 3;
SELECT * FROM tbl WHERE JSON_DEPTH(j) = 4;
SELECT JSON_LENGTH(j) FROM tbl;
SELECT * FROM tbl WHERE JSON_LENGTH(j) = 4;
SELECT * FROM tbl WHERE JSON_LENGTH(j) = 3;
TRUNCATE TABLE tbl;
INSERT INTO tbl VALUES(1, '{"a": [10, true]}');
SELECT JSON_TYPE(j) FROM tbl;
SELECT JSON_TYPE(JSON_EXTRACT(j, '$.a')) FROM tbl;
SELECT JSON_TYPE(JSON_EXTRACT(j, '$.a[0]')) FROM tbl;
SELECT JSON_TYPE(JSON_EXTRACT(j, '$.a[1]')) FROM tbl;
SELECT id, JSON_VALID(j) FROM tbl;
SELECT id FROM tbl WHERE JSON_VALID(j) = 0;
SELECT id FROM tbl WHERE JSON_VALID(j) = 1;
SELECT id, JSON_VALID(j) FROM tbl WHERE JSON_VALID(j) = 0;
SELECT id, JSON_VALID(j) FROM tbl WHERE JSON_VALID(j) = 1;
SET GLOBAL print_bool_as_literal = OFF;
