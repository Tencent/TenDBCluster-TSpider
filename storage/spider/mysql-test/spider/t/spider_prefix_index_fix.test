--echo #
--echo # MDEV-27172 Prefix indices on Spider tables may lead to wrong query results
--echo # This test is for TSpider.
--echo #

--disable_warnings
--disable_query_log
--source ../t/test_init.inc
--disable_result_log
--enable_result_log
--enable_query_log

--let $USE_CHILD_GROUP2_BACKUP= $USE_CHILD_GROUP2
--let $USE_CHILD_GROUP2= 1

--source ../include/spider_create_database.inc
--let $TABLE_NAME = t1
--let $TABLE_BODY = id varchar(32), c1 varchar(32), c2 varchar(32), c3 varchar(32), c4 varchar(32), c5 varchar(32), flag int, primary key(id), key(c1), key(c2(4)), key(c3(8), c4(12), c5(16))
--echo $TABLE_BODY
--let $TABLE_SHARD_KEY = id
--source ../include/spider_create_table_helper.inc

# create a mirror table for joining t1
--let $TABLE_NAME = t2
--source ../include/spider_create_table_helper.inc

# special case where part of primary key could be prefix
--let $TABLE_NAME = t3
--let $TABLE_BODY = id1 varchar(32), id2 varchar(32), flag int, primary key(id1, id2(4))
--let $TABLE_SHARD_KEY = id1
--source ../include/spider_create_table_helper.inc

--let $USE_GENERAL_LOG_BACKUP= $USE_GENERAL_LOG
--let $USE_GENERAL_LOG= 1

--connection master_1
SET @ignore_single_select_index_backup = @@spider_ignore_single_select_index;
SET @join_cache_level_backup = @@join_cache_level;
SET @spider_string_key_equal_to_like_backup = @@spider_string_key_equal_to_like;
SET spider_ignore_single_select_index=OFF;
SET join_cache_level=0; # force execution plan
SET spider_string_key_equal_to_like=ON;
if ($USE_GENERAL_LOG)
{
    SET @old_log_output = @@global.log_output;
    SET @old_general_log = @@global.general_log;
    SET @old_spider_general_log = @@global.spider_general_log;
    SET GLOBAL log_output = 'TABLE';
    SET GLOBAL general_log = 1;
    SET GLOBAL spider_general_log = 1;
    TRUNCATE TABLE mysql.general_log;
}

--connection master_1
USE auto_test_local;
INSERT INTO t1(id, c1, c2, c3, c4, c5, flag) VALUES
(
    "abcdefghijklmnopqrstuvwxyz_1",
    "abcdefghijklmnopqrstuvwxyz",
    "abcdefghijklmnopqrstuvwxyz",
    "abcdefghijklmnopqrstuvwxyz",
    "abcdefghijklmnopqrstuvwxyz",
    "abcdefghijklmnopqrstuvwxyz",
    1
);

INSERT INTO t2(id, c1, c2, c3, c4, c5, flag) VALUES
(
    "abcdefghijklmnopqrstuvwxyz_2",
    "abcdefghijklmnopqrstuvwxyz",
    "abcdefghijklmnopqrstuvwxyz",
    "abcdefghijklmnopqrstuvwxyz",
    "abcdefghijklmnopqrstuvwxyz",
    "abcdefghijklmnopqrstuvwxyz",
    2
);

INSERT INTO t3(id1, id2, flag) VALUES
(
    "abcdefghijklmnopqrstuvwxyz_3",
    "abcdefghijklmnopqrstuvwxyz",
    3
);

--echo
--echo # Using primary key, operator should be EQUAL
SELECT id, flag FROM t1 WHERE id = "abcdefghijklmnopqrstuvwxyz_1";
if ($USE_GENERAL_LOG)
{
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select%' AND argument NOT LIKE '%argument%';
    TRUNCATE TABLE mysql.general_log;
}

--echo
--echo # Using non-prefix key, operator should be EQUAL
SELECT id, flag FROM t1 WHERE c1 = "abcdefghijklmnopqrstuvwxyz";
if ($USE_GENERAL_LOG)
{
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select%' AND argument NOT LIKE '%argument%';
    TRUNCATE TABLE mysql.general_log;
}

--echo
--echo # Using single prefix key, operator should be LIKE
SELECT id, flag FROM t1 WHERE c2 = "abcdefghijklmnopqrstuvwxyz";
if ($USE_GENERAL_LOG)
{
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select%' AND argument NOT LIKE '%argument%';
    TRUNCATE TABLE mysql.general_log;
}

--echo
--echo # Both c3 and c4 should be index conditions
SELECT id, flag FROM t1 WHERE c3 = "abcdefghijklmnopqrstuvwxyz" AND c4 = "abcdefghijklmnopqrstuvwxyz";
if ($USE_GENERAL_LOG)
{
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select%' AND argument NOT LIKE '%argument%';
    TRUNCATE TABLE mysql.general_log;
}

--echo
--echo # Only c3 should be an index condition
SELECT id, flag FROM t1 WHERE c3 = "abcdefghijklmnopqrstuvwxyz" AND c5 = "abcdefghijklmnopqrstuvwxyz";
if ($USE_GENERAL_LOG)
{
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select%' AND argument NOT LIKE '%argument%';
    TRUNCATE TABLE mysql.general_log;
}

--echo
--echo # Joining on primary key
SELECT a.id, a.flag, b.id, b.flag FROM t1 a JOIN t2 b ON a.id = b.id;
if ($USE_GENERAL_LOG)
{
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select%' AND argument NOT LIKE '%argument%';
    TRUNCATE TABLE mysql.general_log;
}

--echo
--echo # Joining on non-prefix key
SELECT a.id, a.flag, b.id, b.flag FROM t1 a JOIN t2 b ON a.c1 = b.c1;
if ($USE_GENERAL_LOG)
{
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select%' AND argument NOT LIKE '%argument%';
    TRUNCATE TABLE mysql.general_log;
}

--echo
--echo # Joining on prefix key
SELECT a.id, a.flag, b.id, b.flag FROM t1 a JOIN t2 b ON a.c2 = b.c2;
if ($USE_GENERAL_LOG)
{
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select%' AND argument NOT LIKE '%argument%';
    TRUNCATE TABLE mysql.general_log;
}

--echo
--echo # First part of primary key is non-prefix, should be EQUAL
SELECT id1, id2, flag FROM t3 WHERE id1 = "abcdefghijklmnopqrstuvwxyz_3";
if ($USE_GENERAL_LOG)
{
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select%' AND argument NOT LIKE '%argument%';
    TRUNCATE TABLE mysql.general_log;
}

--echo
--echo # Only second part of primary key is in the condition, should not be using key
SELECT id1, id2, flag FROM t3 WHERE id2 = "abcdefghijklmnopqrstuvwxyz";
if ($USE_GENERAL_LOG)
{
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select%' AND argument NOT LIKE '%argument%';
    TRUNCATE TABLE mysql.general_log;
}

--echo
--echo # First part of primary key is still EQUAL; second part is prefix, should be LIKE.
SELECT id1, id2, flag FROM t3 WHERE id1 = "abcdefghijklmnopqrstuvwxyz_3" AND id2 = "abcdefghijklmnopqrstuvwxyz";
if ($USE_GENERAL_LOG)
{
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select%' AND argument NOT LIKE '%argument%';
    TRUNCATE TABLE mysql.general_log;
}

# cleanup
SET spider_ignore_single_select_index = @ignore_single_select_index_backup;
SET spider_string_key_equal_to_like = @spider_string_key_equal_to_like_backup;
SET join_cache_level = @join_cache_level_backup;
if ($USE_GENERAL_LOG)
{
    --connection master_1
    SET GLOBAL log_output = @old_log_output;
    SET GLOBAL general_log = @old_general_log;
    SET GLOBAL spider_general_log = @old_spider_general_log;
    TRUNCATE TABLE mysql.general_log;
}

--let @USE_CHILD_GROUP2= $USE_CHILD_GROUP2_BACKUP
--let @USE_GENERAL_LOG= $USE_GENERAL_LOG_BACKUP

--source ../include/spider_drop_database.inc
